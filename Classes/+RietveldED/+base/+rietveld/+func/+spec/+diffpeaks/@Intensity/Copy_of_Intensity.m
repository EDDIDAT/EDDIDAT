classdef Intensity < rietveld.base.RVFunction

	methods (Access = public)
		
		function intensity = execute(obj, ep, acm, general, meas, phase, spec)
		% ep und acm werden aus Effizienzgruenden direkt uebergeben
					
			% TODO: das ist auch eine Konstante
			INorm = 260;
			corr = (INorm / spec.RingCurrent) * (100 / (100 - spec.DeadTime));
			
			intensity = general.ScaleFactor * (1/corr) * (...
				obj.sfwc.FHKL.execute([], general, meas, phase, spec) .* ...
				general.Multiplicity .* ... % obj.sfwc.Wiggler.execute(ep) .* ... Wird nicht mehr benötigt (da jetzt die Korrektur in der Spectrum.m durchgeführt wird): "obj.sfwc.Wiggler.execute(ep) .* ..."
				obj.sfwc.Wiggler.execute(ep) .* ...	
				(1 ./ (2 * phase.Density * acm)) .* ...
				exp(- meas.DensityAir * meas.DetectorDistance * obj.sfwc.AttenuationCoeffAir.execute(ep, general, meas, phase, spec)) .* ...
				(12.398 ./ ep).^3);
%             disp(intensity);
        end
		        
		function obj = addFunctionParameters(obj, pc)
			
			obj.addParameter(pc, 'Density',...
				'Category', 'Material',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'DensityAir',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', false);
			obj.addParameter(pc, 'DetectorDistance',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', false);
			obj.addParameter(pc, 'RingCurrent',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', true);
			obj.addParameter(pc, 'DeadTime',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', true);
					
			obj.addParameter(pc, 'ScaleFactor',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'Multiplicity',...
				'Category', 'Peaks',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
		end
	end
	
	methods (Access = protected)
		
		function obj = initSubFunctions(obj)
			
			obj.addSubFunction('AttenuationCoeffAir', 'rietveld.func.spec.corr.AttenuationCoeffAir', rietveld.func.spec.corr.AttenuationCoeffAir());
			% Die Wigglerkorrektur wird hier an dieser Stelle nicht mehr
			% benötigt (geändert 06-11-13).
			obj.addSubFunction('Wiggler', 'rietveld.func.spec.corr.WigglerInterface', rietveld.func.spec.corr.WigglerInterface());
			obj.addSubFunction('FHKL', 'rietveld.func.spec.diffpeaks.fhkl.FHKLInterface', rietveld.func.spec.diffpeaks.fhkl.LeBail());
		end
	end
end

