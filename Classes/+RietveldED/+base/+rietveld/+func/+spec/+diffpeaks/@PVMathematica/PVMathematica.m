classdef PVMathematica < rietveld.func.spec.diffpeaks.PeakInterface

	methods (Access = public)
		
		function Y = execute(obj, X, general, meas, phase, spec)
			
			ep = obj.sfwc.EnergyPos.execute([], general, meas, phase, spec);
			% Mehrfach benoetigt, aber hier nur einmal berechnet
			acm = obj.sfwc.AttenuationCoeffMat.execute(ep, general, meas, phase, spec);			
			intensity = obj.sfwc.Intensity.execute(ep, acm, general, meas, phase, spec);
			eps_hkl = obj.sfwc.Strain.execute(acm, general, meas, phase, spec);
			
			PVmix = general.PVmix;
			PVsigma = general.PVsigma;
			
			Y = 0;
			for i = 1:size(general.H, 1)
				X_shift = X - ep(i);
				Y = Y + intensity(i) .* (PVmix(i) .* ...
					exp(-(X_shift + eps_hkl(i) * ep(i)).^2/(2.*PVsigma(i).^2)) + ...
					(1 - PVmix(i)) .* (1 + 4 * ((X_shift + eps_hkl(i) * ep(i))/PVsigma(i)).^2).^(-1));
			end
		end
		
		function obj = addFunctionParameters(obj, pc)
			
			obj.addParameter(pc, 'PVmix',...
				'Category', 'Peaks',...
				'ParamSize', [NaN, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'PVsigma',...
				'Category', 'Peaks',...
				'ParamSize', [NaN, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', true);
% 			obj.addParameter(pc, 'PVsigma',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [6, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
% 			obj.addParameter(pc, 'V_Detector',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [1, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
% 			obj.addParameter(pc, 'X_Size',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [1, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
% 			obj.addParameter(pc, 'Y_Strain',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [1, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
% 			obj.addParameter(pc, 'Z_Detector',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [1, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
% 			obj.addParameter(pc, 'eps_hkl',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [4, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', true);
		end
	end
	
	methods (Access = protected)
		
		function obj = initSubFunctions(obj)
			
			obj.addSubFunction('AttenuationCoeffMat', 'rietveld.func.spec.corr.AttenuationCoeffMat', rietveld.func.spec.corr.AttenuationCoeffMat());
			obj.addSubFunction('EnergyPos', 'rietveld.func.spec.EnergyPosInterface', rietveld.func.spec.EnergyPosInterface());
			obj.addSubFunction('Intensity', 'rietveld.func.spec.diffpeaks.Intensity', rietveld.func.spec.diffpeaks.Intensity());
			obj.addSubFunction('Strain', 'rietveld.func.spec.diffpeaks.strain.StrainInterface', rietveld.func.spec.diffpeaks.strain.StrainInterface());
		end
	end
end

