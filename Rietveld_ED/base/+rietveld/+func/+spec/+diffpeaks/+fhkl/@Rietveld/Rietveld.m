classdef Rietveld < rietveld.func.spec.diffpeaks.fhkl.FHKLInterface
	
	methods (Access = public)
		
		function StructureFactor = execute(obj, ~, general, meas, phase, spec)
			
			ap = phase.APConst;
			ap(phase.APFitPattern ~= 0) = 0;
			
% 			for i = 1:length(phase.APFitParams)
% 				
% 				ap = ap + phase.APFitParams(i) * ((abs(phase.APFitPattern) == i) .* sign(phase.APFitPattern)) + ...
% 						  phase.APPosParam1 * ((abs(phase.APPosPattern1) == 1) .* sign(phase.APPosPattern1)) + ...
% 						  phase.APPosParam2 * ((abs(phase.APPosPattern2) == 1) .* sign(phase.APPosPattern2));
% 			end
			APFitParams = [phase.APFitParam1; phase.APFitParam2; phase.APFitParam3; phase.APFitParam4; phase.APFitParam5; phase.APFitParam6];
			
			for i = 1:phase.CountAPFitParams
	
				ap = ap + APFitParams(i) * ((abs(phase.APFitPattern) == i) .* sign(phase.APFitPattern)) + phase.APosParam(i) * ((abs(phase.APosPattern) == i) .* sign(phase.APosPattern));
			end

			ap = ap + phase.AtomCoordinates;

			cutPos = cumsum(phase.AtomCoordCnts) - phase.AtomCoordCnts + 1;
			svm = (sind(meas.TwoTheta./2) .* obj.sfwc.EnergyPos.execute([], general, meas, phase, spec)) ./ 12.398;
			
			f1 = {phase.Atom1f1; phase.Atom2f1};
            f2 = {phase.Atom1f2; phase.Atom2f2};

			StructureFactor = 0;
			
			DebyeWaller = [phase.DebyeWaller1; phase.DebyeWaller2; phase.DebyeWaller3];
			
			cutPos = [cutPos; size(ap, 1)+1];
			for i = 1:(length(cutPos)-1)
		
				AtomFactor = sum(repmat(phase.SF_a(i,:), length(svm),1) ...
					.* exp(-repmat(phase.SF_b(i,:), length(svm),1) .* repmat(svm.^2,1, 4)),2) ...
					+ phase.SF_c(i);
				
				f1element = interp1(f1{i}(:,1),f1{i}(:,2),obj.sfwc.EnergyPos.execute([], general, meas, phase, spec),'linear');
                f2element = exp(interp1(log(f2{i}(:,1)),log(f2{i}(:,2)),log(obj.sfwc.EnergyPos.execute([], general, meas, phase, spec)),'linear'));
				
% 				f = (AtomFactor + f1element + f2element) .* exp(-DebyeWaller(i).*svm.^2);
                
                f = AtomFactor;

				Fhkl = sum(exp(2 * pi * 1i * ([general.H, general.K, general.L] * ap(cutPos(i):(cutPos(i+1)-1),:)')),2);
% 				disp(Fhkl)
				StructureFactor = StructureFactor + f .* Fhkl;
% 				disp(StructureFactor)
			end
			StructureFactor = abs(StructureFactor).^2;
% 			disp(StructureFactor)
		end
		
		function obj = addFunctionParameters(obj, pc)
			
			obj.addParameter(pc, 'TwoTheta',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', false);
			
			obj.addParameter(pc, 'SF_a',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 4],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'SF_b',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 4],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'SF_c',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'SF_a',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 4],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APConst',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 3],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitPattern',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 3],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
% 			obj.addParameter(pc, 'APFitParams',...
% 				'Category', 'Atom Positions',...
% 				'ParamSize', [NaN, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam1',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam2',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam3',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam4',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam5',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APFitParam6',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'CountAPFitParams',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'AtomCoordCnts',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			
			obj.addParameter(pc, 'APosPattern',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 3],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'APosParam',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'AtomCoordinates',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 3],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			
			obj.addParameter(pc, 'DebyeWaller1',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'DebyeWaller2',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'DebyeWaller3',...
				'Category', 'Atom Positions',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Atom1f1',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 2],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Atom1f2',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 2],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Atom2f1',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 2],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Atom2f2',...
				'Category', 'Atom Positions',...
				'ParamSize', [NaN, 2],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			
			obj.addParameter(pc, 'H',...
				'Category', 'Energy Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'K',...
				'Category', 'Energy Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'L',...
				'Category', 'Energy Positions',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
		end
	end
	
	methods (Access = protected)
		
		function obj = initSubFunctions(obj)
			
			obj.addSubFunction('EnergyPos', 'rietveld.func.spec.EnergyPosCalib', rietveld.func.spec.EnergyPosCalib());
		end
	end
end

