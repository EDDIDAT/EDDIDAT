classdef Triaxial < rietveld.func.spec.diffpeaks.strain.StrainInterface

	methods (Access = public)
		
		function eps_hkl = execute(obj, acm, general, meas, phase, spec)
		% acm wird aus Effizienzgruenden direkt uebergeben
			
			tau = obj.sfwc.Tau.execute(acm, general, meas, phase, spec);

			%% Allgemeine Fitfunktionen
			sigmatau11 = phase.Sigma11_StressCoef1./(phase.Sigma11_StressCoef5.*tau + 1) + ...
				phase.Sigma11_StressCoef2.*tau./(phase.Sigma11_StressCoef5.*tau + 1).^2 + ...
				2.* phase.Sigma11_StressCoef3.*tau.^2./(phase.Sigma11_StressCoef5.*tau + 1).^3 + ...
				6.* phase.Sigma11_StressCoef4.*tau.^3./(phase.Sigma11_StressCoef5.*tau + 1).^4;
			
			sigmatau22 = phase.Sigma22_StressCoef1./(phase.Sigma22_StressCoef5.*tau + 1) + ...
				phase.Sigma22_StressCoef2.*tau./(phase.Sigma22_StressCoef5.*tau + 1).^2 + ...
				2.* phase.Sigma22_StressCoef3.*tau.^2./(phase.Sigma22_StressCoef5.*tau + 1).^3 + ...
				6.* phase.Sigma22_StressCoef4.*tau.^3./(phase.Sigma22_StressCoef5.*tau + 1).^4;
			
			sigmatau33 = phase.Sigma33_StressCoef1./(phase.Sigma33_StressCoef5.*tau + 1) + ...
				phase.Sigma33_StressCoef2.*tau./(phase.Sigma33_StressCoef5.*tau + 1).^2 + ...
				2.* phase.Sigma33_StressCoef3.*tau.^2./(phase.Sigma33_StressCoef5.*tau + 1).^3 + ...
				6.* phase.Sigma33_StressCoef4.*tau.^3./(phase.Sigma33_StressCoef5.*tau + 1).^4;
			
			%% Vorgabe Spannungstensor
% 			sigmatau11 = phase.Sigma11_StressCoef1./(phase.Sigma11_StressCoef3.*tau + 1) + 2.* phase.Sigma11_StressCoef2.*tau.^2./(phase.Sigma11_StressCoef3.*tau + 1).^3;
% 			sigmatau22 = phase.Sigma22_StressCoef1;
% 			sigmatau33 = 6.* phase.Sigma33_StressCoef1.*tau.^3./(phase.Sigma33_StressCoef2.*tau + 1).^4;
			
			% Beruecksichtigung des Falles eines biaxialen
			% Eigenspannungszustands, bei dem nur die Parameter von
			% sigma_11 verfeinert werden. Sobald die letzten Parameter von
			% Sigma_ii ungleich Null sind, wird wieder der allgemeine
			% dreiachsige Eigenspannungszustand angenommen. Eventuell muss
			% die Vorgehensweise fuer besondere Fälle geaendert werden. 
			if (phase.Sigma22_StressCoef5 == 0 && phase.Sigma33_StressCoef5 == 0)
				eps_hkl = ((sind(spec.Psi)^2) * general.DEK_S2 + 2 * general.DEK_S1) .* sigmatau11;
			else
				eps_hkl = general.DEK_S2.*(sind(spec.Psi).^2.*(sigmatau11.*cosd(spec.Phi).^2 + sigmatau22.*sind(spec.Phi).^2 - sigmatau33) + sigmatau33) + ...
						  general.DEK_S1.*(sigmatau11 + sigmatau22 + sigmatau33);
			end
% 			assignin('base', 'eps_hkl', eps_hkl);
		end

		function obj = addFunctionParameters(obj, pc)

			obj.addParameter(pc, 'DEK_S1',...
				'Category', 'Material',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'DEK_S2',...
				'Category', 'Material',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', true);
			obj.addParameter(pc, 'd0',...
				'Category', 'Material',...
				'ParamSize', [NaN, 1],...
				'Constant', true,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'TwoTheta',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', false);
			obj.addParameter(pc, 'Psi',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', true);
			obj.addParameter(pc, 'Phi',...
				'Category', 'Measurement',...
				'ParamSize', [1, 1],...
				'Constant', true,...
				'PhaseDep', false,...
				'SpecDep', true);
% 			obj.addParameter(pc, 'StressCoef',...
% 				'Category', 'Peaks',...
% 				'ParamSize', [3, 1],...
% 				'Constant', false,...
% 				'PhaseDep', true,...
% 				'SpecDep', false);
			obj.addParameter(pc, 'Sigma11_StressCoef1',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma11_StressCoef2',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma11_StressCoef3',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma11_StressCoef4',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma11_StressCoef5',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma22_StressCoef1',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma22_StressCoef2',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma22_StressCoef3',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma22_StressCoef4',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma22_StressCoef5',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma33_StressCoef1',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma33_StressCoef2',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma33_StressCoef3',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma33_StressCoef4',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
			obj.addParameter(pc, 'Sigma33_StressCoef5',...
				'Category', 'Peaks',...
				'ParamSize', [1, 1],...
				'Constant', false,...
				'PhaseDep', true,...
				'SpecDep', false);
		end
	end
	
	methods (Access = protected)
		
		function obj = initSubFunctions(obj)
			
			obj.addSubFunction('Tau', 'rietveld.func.spec.diffpeaks.Tau', rietveld.func.spec.diffpeaks.Tau());
		end
	end
	
end

